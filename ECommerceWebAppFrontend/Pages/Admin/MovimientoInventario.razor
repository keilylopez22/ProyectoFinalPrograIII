@page "/admin/MovimientoInventario"
@using ApiECommerce.Modelo
@using ECommerceWebAppFrontend.Services
@using ApiECommerce.DTOs
@inject MovimientoInventarioService MovimientoService

<!--botn buscar rosita-->
<style>
 .btn-pink {
    background-color: #e83e8c;
    color: white;
    border: none;
}

.btn-pink:hover {
    background-color: #d63384;
    color: white;
}

</style>
<h3 class="titulo">Movimientos de Inventario</h3>

<div class="filtros">
    <div class="row g-2 mb-3">
        <div class="col-md-3">
            <label class="form-label">Desde:</label>
            <InputDate class="form-control" @bind-Value="fechaInicio" />
        </div>
        <div class="col-md-3">
            <label class="form-label">Hasta:</label>
            <InputDate class="form-control" @bind-Value="fechaFin" />
        </div>
        <div class="col-md-3 align-self-end">
            <button class="btn btn-pink" @onclick="Buscar">Buscar</button> @* Botón rosado personalizado *@
        </div>
    </div>
</div>

@if (cargando)
{
    <p><em>Cargando datos...</em></p>
}
else if (resultado?.Datos is not null && resultado.Datos.Any())
{
    <table class="table table-hover">
        <thead class="table-dark">
            <tr>
                <th>Producto</th>
                <th>Tipo Movimiento</th>
                <th>Cantidad</th>
                <th>Fecha</th>
                <th>Documento</th>
                <th>Notas</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in resultado.Datos)
            {
                <tr>
                    <td>@item.Producto?.Nombre</td>
                    <td>@item.TipoMovimiento</td>
                    <td>@item.Cantidad</td>
                    <td>@item.FechaMovimiento.ToString("dd/MM/yyyy HH:mm")</td>
                    <td>@item.TipoDocumento (#@item.IdDocumento)</td>
                    <td>@item.Notas</td>
                </tr>
            }
        </tbody>
    </table>

    <div class="paginacion">
        <button class="btn btn-outline-primary" @onclick="PaginaAnterior" disabled="@(!PuedeRetroceder)">Anterior</button>
        <span class="mx-2">Página @pagina</span>
        <button class="btn btn-outline-primary" @onclick="PaginaSiguiente" disabled="@(!PuedeAvanzar)">Siguiente</button>
    </div>
}
else
{
    <p>No hay resultados.</p>
}

@code {
    private MovimientoInventarioResultado resultado = new();
    private DateTime? fechaInicio;
    private DateTime? fechaFin;
    private bool cargando = false;

    private int pagina = 1;
    private int tamanoPagina = 10;

    private bool PuedeRetroceder => pagina > 1;
    private bool PuedeAvanzar => pagina * tamanoPagina < resultado.TotalRegistros;

    protected override async Task OnInitializedAsync()
    {
        await Buscar();
    }

    private async Task Buscar()
    {
        cargando = true;
        resultado = await MovimientoService.ObtenerMovimientosAsync(pagina, tamanoPagina, fechaInicio, fechaFin);
        cargando = false;
    }

    private async Task PaginaAnterior()
    {
        if (PuedeRetroceder)
        {
            pagina--;
            await Buscar();
        }
    }

    private async Task PaginaSiguiente()
    {
        if (PuedeAvanzar)
        {
            pagina++;
            await Buscar();
        }
    }
}
