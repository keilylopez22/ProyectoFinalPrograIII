@page "/Admin/Login"
@layout EmptyLayout
@using ECommerceWebAppFrontend.Services
@using ECommerceWebAppFrontend.Modelo
@inject LoginService LoginService
@inject NavigationManager NavigationManager
@inject IJSRuntime JS

<div class="login-page">
    <div class="login-box">

        <div class="welcome-marquee">
            <marquee behavior="scroll" direction="left" scrollamount="6">
                Bienvenido a KC-MART
            </marquee>
        </div>

        <div class="logo-container">
            <img src="images/logo.jpeg" alt="Logo de KC-MART" class="logo" />
            <h1>KC-MART</h1>
        </div>

        <div class="login-form">
            <EditForm Model="@loginModelo" OnValidSubmit="HandleLogin">
                <DataAnnotationsValidator />
                 @if (!string.IsNullOrEmpty(errorMessage))
                {
                    <div class="alert alert-danger text-center">@errorMessage</div>
                }
                        <div class="form-group">
                    <div class="input-group">
                        <span class="input-group-text">
                            <i class="fas fa-envelope"></i>
                        </span>
                        <InputText @bind-Value="loginModelo.Email" class="form-control" placeholder="Correo electrónico" />
                    </div>
                    <ValidationMessage For="@(() => loginModelo.Email)" class="text-danger" />
                </div>

                <div class="form-group mt-3">
                    <div class="input-group">
                        <span class="input-group-text">
                            <i class="fas fa-lock"></i>
                        </span>
                        <InputText type="password" @bind-Value="loginModelo.Password" class="form-control" placeholder="Contraseña" />
                    </div>
                    <ValidationMessage For="@(() => loginModelo.Password)" class="text-danger" />
                </div>

                <button type="submit" class="btn btn-primary w-100 mt-4" disabled="@isLoading">
                    @if (isLoading)
                    {
                        <span class="spinner-border spinner-border-sm me-2"></span>
                        <span>Procesando...</span>
                    }
                    else
                    {
                        <span>Iniciar Sesión</span>
                    }
                </button>

                <button type="submit" class="btn btn-secondary w-100 mt-3" disabled="@isLoading">
                    @if (isLoading)
                    {
                        <span class="spinner-border spinner-border-sm me-2"></span>
                        <span>Procesando...</span>
                    }
                    else
                    {
                        <span>Registrarse</span>
                    }
                </button>
            </EditForm>
        </div>
    </div>
</div>

@code {
    private LoginModelo loginModelo = new();
    private bool isLoading;
    private string errorMessage;
    private bool isLogin = true;

    private async Task HandleLogin()
{
    errorMessage = string.Empty;
    isLoading = true;
    isLogin = true;

    try
    {
        var result = await LoginService.LoginAsync(loginModelo.Email, loginModelo.Password);
        if (result)
        {
            NavigationManager.NavigateTo("/home");
        }
        else
        {
            errorMessage = "Credenciales inválidas.";
        }
    }
    catch
    {
        errorMessage = "Error al iniciar sesión.";
    }
    finally
    {
        isLoading = false;
    }
}

private async Task HandleRegister()
{
    errorMessage = string.Empty;
    isLoading = true;
    isLogin = false;

    try
    {
        var result = await LoginService.RegistrarAsync(loginModelo.Email, loginModelo.Password);
        if (result)
        {
            NavigationManager.NavigateTo("/home");
        }
        else
        {
            errorMessage = "Error al registrarse. Intenta con otro correo.";
        }
    }
    catch
    {
        errorMessage = "Error al registrarse.";
    }
    finally
    {
        isLoading = false;
    }
}

}
